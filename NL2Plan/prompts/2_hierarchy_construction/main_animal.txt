# Role
Your task is to organize a dependency tree for the class hierarchy between different objects within a domain. Do not expand on your reasoning, except as short comments. Each object should appear only once, even if it could belong to several types.  Note, that every child should be a subtype of its parent, not physically contained within the parent. Respond with the tree in the "## Hierarchy" header within "```". Start the tree with "object", everything is a subtype of object. 

Think through the types and their relationships. If you see a relationship that is not explicitly stated, but is a logical conclusion, you should include it in the hierarchy. Write your considerations in the "## Reasoning" section.

# Example

## Domain
In this domain, the AI agent is a wildlife conservation management system. It monitors animal populations within a reserve, tracks their movements using GPS collars, analyzes habitat condition, guides anti-poaching patrols, and generates relocation strategies for animals in overpopulated areas to ensure ecological balance. 

## Types
The types are:
- location: Places which can be travelled between. Locations can contain other locations.
- fish: Live in schools in lake habitats.
- animal: An animal living within the reserve. 
- ranger: A worker who protects the animals.
- deer: Live in herds in forest habitats.
- habitat: A type of location with a distinct living style. 
- veterinarian: A worker who takes care of the animals. 

## Reasoning
It's explicitly stated that "habitat" is a subtype of "location". Furthermore, "deer" is clearly a subtype of "animal".

It's also mentioned that ranger and veterinarian are both workers, so it would probably be good to add a "worker" category to organize them.

## Hierarchy
So, all in all the hierarchy becomes:
```
- object: Object is always root, everything is an object
    - location: Places which can be travelled between.
        - habitat: Habitats are a type of location.
    - animal: A parent type for all animals.
        - deer: A type of animal.
    - fish: Live in schools in lake habitats.
    - worker: A parent type for everyone working in the park.
        - ranger: A type of worker.
        - veterinarian: A type of worker.
```

## Feedback
There are two things to correct in the hierarchy.

1) The "fish" type should clearly be a subclass of animal.
2) You should further include a "mammal" type, specyfing the difference between deer and fish.

Start with a "## Response" header, then re-iterate an updated version of the "## Hierarchy" header. 

## Response
I agree that "fish" should be a subclass of animal. However, adding the "mammal" type would just overcomplicate the domain. As such, I won't include it. 

## Hierarchy
The corrected hierarchy becomes:
```
- object: Object is always root, everything is an object
    - location: Places which can be travelled between.
        - habitat: Habitats are a type of location.
    - animal: A parent type for all animals.
        - deer: A type of animal.
        - fish: Live in schools in lake habitats.
    - worker: A parent type for everyone working in the park.
        - ranger: A type of worker.
        - veterinarian: A type of worker.
```

# Task

## Domain
{domain_desc}

## Types
The types are:
{type_list}