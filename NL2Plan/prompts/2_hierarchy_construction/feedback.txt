# Role
Your task is to evaluate if a type hierarchy is defined in the best way. You can suggest changing of the structure or adding types. If the hierarchy is optimal, respond with "No feedback". Note that everything is always supposed to be a subtype of the "object" class. You shouldn't suggest any new types except those needed for organisation of the provided types.

Go through the following checklist:
1: Is any child not a subtype of its parent? For example, "house" is defined as a subtype of "city". Often this is due to the child being physically inside the parent. 
2: Is any subtype not a child of its parent type? For example, "fish" is not defined as a child of "animal". Often this is due to the subtype itself having further subtypes.
3: Are any new types needed for organisation? For example, if both "carbonara" and "sushi" are both included, a "food" parent type should likely be included as well.

# Examples
## Example 1
### Domain
I've got a building with five floors and two elevators, and I want you to plan the elevator trips for people in the building in a climate friendly way.

### Types
- object: Object is always root, everything is an object
    - floor: The locations which elevators and people move between.
    - elevator: These move between floors and can carry people.
    - person: Persons are at floors and want to move to other floors with the elevators.

### Feedback
1: Is any child not a subtype of its parent? 
    There are no children, and as such no incorrect children. So: No. 

2: Is any subtype not a child of its parent type? 
    None of the types should be subtypes of the others. As such, there are no subtypes missing. Therefore: No.

3: Are any new types needed for organisation? 
    The types are all distinct, and as such no organisation type is needed. Due to this: No.

Therefore: No feedback. 

## Example 2
### Domain
In this domain, the AI agent is a wildlife conservation management system. It monitors animal populations within a reserve, tracks their movements using GPS collars, analyzes habitat condition, guides anti-poaching patrols, and generates relocation strategies for animals in overpopulated areas to ensure ecological balance.

### Hierarchy
- object: Object is always root, everything is an object
    - location: Places which can be travelled between.
        - habitat: Habitats are a type of location.
    - animal: A parent type for all animals.
        - deer: A type of animal.
    - fish: Live in schools in lake habitats.   
        - salmon: A type of fish.
        - trout: A type of fish.
    - ranger: A type of worker.
    - veterinarian: A type of worker.

### Feedback
1: Is any child not a subtype of its parent? 
    All the children are in fact subtypes of their parents. So: No.

2: Is any subtype not a child of its parent type? 
    While "fish" has its own subtypes ("salmon" and "trout") it is ALSO still a subtype of "animal". As such, "fish" and all its children should be moved to be subtypes of "animal". Therefore: Yes.

3: Are any new types needed for organisation? 
    Both "ranger" and "veterinarian" are mentioned to be workers, but the worker class isn't included. It should be included as a parent type and parent of both "ranger" and "veterinarian". Due to this: Yes.

My advice is that you perform the following concrete changes:
    - Move the "fish" type and all its subtypes to be subtypes and children of "animal".
    - Add a "worker" parent type as a parent of both "ranger" and "veterinarian". 

## Example 3
### Domain
The AI agent is here a scheduling system for a house construction company.

### Hierarchy
- object: Object is always root, everything is an object
    - city: Contain houses.
        - house: Buildings which are found in cities
    - vehicle: Used for transportation.
    - worker: Construct buildings

### Feedback
1: Is any child not a subtype of its parent? 
    Houses aren't a type of city, as such they shouldn't be a type of city. This must be fixed. Thereby: Yes.

2: Is any subtype not a child of its parent type? 
    There are no subtypes among the current types. So: No. 

3: Are any new types needed for organisation? 
    Since there are no subtypes, we don't need any organisational types. As such: No.

My advice is that you perform the following concrete change:
    - Move the "house" type away from the "city" type. "house" should not be a subtype of "city". 

# Task
## Domain
{domain_desc}

## Types
{type_hierarchy}

## Feedback